[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-path/" then unplug to verify
##--------------------------------------------------------------------
serial = /dev/serial/by-id/usb-Klipper_lpc1768_17000004090139AF032A0B5DC72000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in E0] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in Y]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-path/" then unplug to verify
##--------------------------------------------------------------------
serial = /dev/serial/by-id/usb-Klipper_lpc1768_01900018A0A447AF28DA155DC42000F5-if00
##--------------------------------------------------------------------

[mcu display]
## Arduino MCU for display over USB
##--------------------------------------------------------------------
serial =         /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
pin_map =        arduino
restart_method = arduino
##--------------------------------------------------------------------

[mcu rpi]
## Host Raspberry Pi as MCU for controlling GPIO
##--------------------------------------------------------------------
serial = /tmp/klipper_host_mcu
##--------------------------------------------------------------------

[printer]
kinematics =              corexy
max_velocity =            300  
max_accel =               4000
max_accel_to_decel =      4000
max_z_velocity =          15
max_z_accel =             350
square_corner_velocity =  5.0

[include steppers.cfg]
[include stepper_drivers.cfg]
[include display.cfg]
[include macros.cfg]

#####################################################################
# 	Optional Firmware Settings
#####################################################################

# Force Move for manual stepper control
[force_move]
enable_force_move = true

# Pause/Resume Functionality
[pause_resume]

# Timeout after idle
[idle_timeout]
timeout = 3600

# This adds the 'respond' G-Code that you can use to send commands back to OctoPrint
[respond]
default_type = echo

## Needed for Moonraker/Mainsail to work
##--------------------------------------------------------------------
[virtual_sdcard]
path = ~/gcode_files
[display_status]
##--------------------------------------------------------------------

#[input_shaper]
#shaper_freq_x = 	 42.1
#shaper_freq_y = 	 51.2
#shaper_type = 		 mzv
#damping_ratio_x = 0.1
#damping_ratio_y = 0.1

[firmware_retraction]
retract_length =         0.75
#   The length of filament (in mm) to retract when G10 is activated, and to
#   unretract when G11 is activated (but see unretract_extra_length below).
#   The default is 0 mm.
retract_speed =          50
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length = 0
#   The length (in mm) of *additional* filament to add when unretracting.
unretract_speed =        30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[bed_mesh]
speed =                    200
horizontal_move_z =        10
probe_count =              9,9
fade_start =               0.5
fade_end =                 25.0
split_delta_z =            0.01
move_check_distance =      3
mesh_pps =                 0,0
algorithm =                bicubic
relative_reference_index = 40
mesh_min =                 40,40
mesh_max =                 260,260

#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
step_pin =                     P2.13
dir_pin =                      !P0.11
enable_pin =                   !P2.12
##	step_distance = measured value / wanted value * step_distance_old
step_distance =                0.002355
nozzle_diameter =              0.400
filament_diameter =            1.75
max_extrude_only_distance =    100.0
heater_pin =                   P2.7

## Config for Voron Stepstick PT100 amplifier connected to the E1 slot
##--------------------------------------------------------------------
sensor_type =                  MAX31865
sensor_pin =                   P1.1
spi_speed =                    4000000
spi_software_sclk_pin =        P0.4
spi_software_mosi_pin =        P4.28
spi_software_miso_pin =        P0.5
rtd_nominal_r =                100
rtd_reference_r =              390 #If you want to be super precise, measure the resistor on the stepstick board
rtd_num_of_wires =             2
rtd_use_50Hz_filter =          true
## Regular thermistor config
##--------------------------------------------------------------------
#sensor_type =                 ATC Semitec 104GT-2
#sensor_pin =                  P0.24
##--------------------------------------------------------------------
min_temp =                     10
max_temp =                     270
max_power =                    1.0
min_extrude_temp =             170
control =                      pid
pid_kp =                       26.449
pid_ki =                       1.367
pid_kd =                       127.947
pressure_advance=              0.04
pressure_advance_smooth_time = 0.040

##	E0 on MCU X/Y
[tmc2209 extruder]
uart_pin = 						P1.9
microsteps = 					16
interpolate = 					false
run_current = 					0.5
hold_current = 					0.4
sense_resistor = 				0.110
stealthchop_threshold = 			0

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	If your probe is NO instead of NC, add change pin to !z: P1.24
pin =                       z: P1.24
x_offset =                  0
y_offset =                  25.0
z_offset =                  0
speed =                     10.0
samples =                   3
samples_result =            median
sample_retract_dist =       3.0
samples_tolerance =         0.006
samples_tolerance_retries = 3

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin =             P2.3
max_power =       1.0
kick_start_time = 0.5
heater =          extruder
heater_temp =     50.0
#fan_speed =      1.0

[fan]
##	Print Cooling Fan - XYE board, Fan Pin
pin =             z: P2.7
kick_start_time = 0.5
off_below =       0.10
cycle_time =      0.05

[heater_fan controller_fan]
#	Controller fan - Z board, HE1 Connector
pin =         z: P2.4
heater =      heater_bed
heater_temp = 45.0

[temperature_sensor chamber]
sensor_type = ATC Semitec 104GT-2
sensor_pin =  P0.24
min_temp =    0
max_temp =    70
#   See the heater section in example.cfg for the definition of the
#   above parameters.
gcode_id =    C
#   See the heater_generic section above for the definition of this
#   parameter.

#[temperature_fan chamber]
## Chamber temp and Exhaust fan
##   See the "temperature_fan" section in example-extras.cfg for a complete
##   description of this sections parameters.
#pin = z: P2.7
##   D8 on mcu_z
#sensor_type = ATC Semitec 104GT-2
#sensor_pin = P0.25
#min_temp = 0
#max_temp = 70
##   The maximum range of valid temperatures (in Celsius) that the
##   sensor must remain within. This controls a safety feature
##   implemented in the micro-controller code - should the measured
##   temperature ever fall outside this range then the micro-controller
##   will go into a shutdown state. Set this range just wide enough so
##   that reasonable temperatures do not result in an error. These
##   parameters must be provided.
#target_temp = 45
##   A temperature (in Celsius) that will be the target temperature.
##   The default is 40 degrees.
#control = watermark
#gcode_id = C
##   If set, the temperature will be reported in M105 queries using the
##   given id. The default is to not report the temperature via M105.

# Heater cooling fans (one may define any number of sections with a
# "heater_fan" prefix). A "heater fan" is a fan that will be enabled
# whenever its associated heater is active.
[heater_fan hour_counter]
pin =            !rpi: gpio22
heater =         extruder
#   Name of the config section defining the heater that this hour counter is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp =    170
#   A temperature (in Celsius) that the heater must drop below before
#   the hour counter is disabled. The default is 50 Celsius.
fan_speed =      1.0
#   This should be kept at 1.0
shutdown_speed = 0.0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. This is set
#	to 0.0 so that the counter won't go on while in error state.

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
#	SSR Pin - Z board, Fan Pin
heater_pin =  z: P2.3
sensor_type = NTC 100K MGB18-104F39050L32
sensor_pin =  z: P0.25
max_power =   0.6
min_temp =    0
max_temp =    120
control =     pid
pid_kp =      40.599
pid_ki =      1.681
pid_kd =      245.114

[temperature_sensor bedcorner]
sensor_type = ATC Semitec 104GT-2
sensor_pin =  z: P0.24
min_temp =    0
max_temp =    120
gcode_id =    BC

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 208,307
speed =            50
z_hop =            6
z_hop_speed =      3
move_to_previous = False
   
[quad_gantry_level]
#	Use QUAD_GANTRY_LEVEL to level a gantry.
gantry_corners =
	-70,-15
	370,365
points =
	50,25
	50,225
	250,225
	250,25
speed =             100
horizontal_move_z = 10
retries =           5
retry_tolerance =   0.0075
max_adjust =        20